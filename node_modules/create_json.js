module.exports = {

	run: function(path, options, callback) {
		var modified = options.modified || false;
	    var finished = options.finished || false;

		buildjson(function(routes){
			var fs = require('fs');
			fs.writeFile("output/js/routes.js", 'var indexJson = '+ JSON.stringify(routes,1,1), function(err) {
			    if(err) {
			        console.log(err);
			    } else {
			        console.log("chad2.txt was saved!");
			    }
			}); 
		});	

		return callback();
	}

};

function buildjson(callback) {

	var readDirFiles = require('read-dir-files');

	readDirFiles.read('contents', 'utf8', function (err, files) {
		if (err) {
			console.dir(err);
			return callback({});
		}
		callback(convertDirFiles(files));
		//console.dir(convertDirFiles(files));
	});
}

function convertDirFiles(dirFiles, route, myObj) {
	route = route || '';
	myObj = myObj || {};
	var sortedKeys = getSortedKeys(dirFiles);
	var val;
	for (var i = 0; i < sortedKeys.length; i++) {
		val = dirFiles[sortedKeys[i]];
		if (typeof val == 'string') {
			// sortedKeys[i] == 'index.json'
			myObj[route + '/'] = JSON.parse(val);

		} else {
			// sortedKeys[i] == name of dir, recurse
			convertDirFiles(
				val, 
				route + '/' + sortedKeys[i],
				myObj);
		}
	};
	return myObj;
}

function getSortedKeys(myObj) {
	var keys = [], k;
	for (k in myObj) {
	    if (myObj.hasOwnProperty(k))
	    {
	        keys.push(k);
	    }
	}
	return keys.sort();
}